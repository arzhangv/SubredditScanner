{"data": [{"controversiality": 0, "author_flair_text": null, "score": 1, "author": "netscape101", "subreddit": "Malware", "created_utc": 1468910498, "edited": false, "body": "The site listed on the whois info seems to be blacklisted:\nhttps://www.virustotal.com/en/url/a96ba2d8df6238947c1575c228fda4fd771d5635799ec98f236cc0f0dfc9daf1/analysis/", "gilded": 0, "subreddit_id": "t5_2qrkp", "stickied": false, "id": "d5hv1r0", "distinguished": null, "link_id": "t3_4tjnr2", "ups": 1, "parent_id": null, "author_flair_css_class": null, "retrieved_utc": 1471525845, "updated_utc": 1668785827, "body_sha1": "1c327f51f0a499c04c0a959374ca6fd80dd42049", "nest_level": 1, "utc_datetime_str": "2016-07-19 06:41:38"}, {"distinguished": null, "id": "d5hrk58", "link_id": "t3_4t9lkh", "parent_id": null, "author_flair_css_class": null, "ups": 1, "created_utc": 1468901623, "author_flair_text": null, "score": 1, "author": "_DMEW", "controversiality": 0, "subreddit": "Malware", "subreddit_id": "t5_2qrkp", "stickied": false, "edited": false, "body": "When you say \"Exploit Researcher\" I assume you mean the real deal. Not a configuration jockey who knows how to find flaws in Apache setups by careless IT staff. so...Exploit Dev? Its primarily 1 thing: Reverse Engineering.\n\nKnow that term, study the shit out of it, and relentlessly work to expand your comfort in that work, and yes that means assembly. \n\nThe way exploits work is you typically fuzz, crash, develop. The biggest skill and time is before and after the fuzz which both require heavy reverse engineering work to understand the what, why, and how of your crash in order to write a proper exploit. So with that, pick up a reverse engineering book, start with reversing crackmes (google that), move to CTF challenges, reverse malware, and then understand how to make new exploits. I am assuming you know how to develop code somewhat. ", "gilded": 0, "retrieved_utc": 1471524200, "updated_utc": 1668785822, "body_sha1": "69b2238780443665ed9c71aeb819bc349e027b13", "nest_level": 1, "utc_datetime_str": "2016-07-19 04:13:43"}, {"ups": 1, "author_flair_css_class": null, "parent_id": 28630167545, "link_id": "t3_4s9oxd", "distinguished": null, "id": "d5hox1d", "body": "So if they don't use hashes, how do AV vendors determine if an executable contains a certain dodgy subroutine?\n\nGoing off of the example you gave: say a computer is infected by the ten subroutine virus you mentioned.  The virus is well known, so AV vendors have added a specific algorithm to detect it.  The virus contains one particularly dodgy subroutine that the AV vendors have decided to use to flag the executable as malicious -- if any program is determined to contain that subroutine, it is deemed to be malware.\n\nBut let's say the virus is metamorphic.  So, like you mentioned, the AV vendors can't rely on a hash to determine if that subroutine is present in a program.  How then do they attempt to detect it?  You mentioned they could use statistics on API calls (i.e. the program calls these library functions in this order), but are there any other methods?", "gilded": 0, "edited": false, "stickied": false, "subreddit_id": "t5_2qrkp", "subreddit": "Malware", "score": 1, "author_flair_text": null, "author": "exosphere6", "controversiality": 0, "created_utc": 1468897135, "retrieved_utc": 1471522876, "updated_utc": 1668785819, "body_sha1": "36685e52bec9132427964a7bf05dab4b01612bf2", "utc_datetime_str": "2016-07-19 02:58:55"}, {"subreddit_id": "t5_2qrkp", "stickied": false, "edited": false, "gilded": 0, "body": "You're focusing a bit too much on the idea of hashes, hashes are brittle &amp; not really used too much outside of automation I would presume. Hashes being one-way reduction algorithms mean that you lose information &amp; if what you tipped into the algorithm changes then so does the hash output obviously. Now they can be a handy starting point while focusing more on collecting the interest data points but it comes down to how you wish to represent the data that you're matching.\n\nWhen I used the term functions that you quoted, I was simply meaning the subroutines you encounter in the program, outside of library code it's going to come down to how the malware author wrote their code. Did they write everything in a single main block? Did the compile &amp; link a lot of library code? Looking at a sequence of APIs or code-flow etc can be useful while at other times it could be completely pointless, if they had 10 subroutines and only one was determined to be specifically malicious then would you really care about the others? Poking through files in a disassembler can help give insight into where the dodgy code resides, points of interest, &amp; the tactics you may want to employ in detecting it. There is no single way the engine works, the detection identities basically instruct the engine in how we want it to act, where we want it to look, and such when it scans over a file.\n\nDon't forget AV companies will have a Dev team for the engine that is separate to the team that write the detection scripts, it's a hell of a lot of work so start with one idea for how you want to match things &amp; maybe focus more on finding points of interest from there. Understanding the OS along with file formats really helps with how to direct your engine.", "created_utc": 1468895544, "author_flair_text": null, "author": "Fulrem", "score": 1, "controversiality": 0, "subreddit": "Malware", "parent_id": 28630073319, "author_flair_css_class": null, "ups": 1, "distinguished": null, "id": "d5hnunt", "link_id": "t3_4s9oxd", "retrieved_utc": 1471522373, "updated_utc": 1668785819, "body_sha1": "dc5b4acc341b750b563e0b66d3f51900807da063", "utc_datetime_str": "2016-07-19 02:32:24"}, {"subreddit_id": "t5_2qrkp", "stickied": false, "edited": false, "gilded": 0, "body": "How did you deobfuscate that script?", "created_utc": 1468892657, "controversiality": 0, "author_flair_text": null, "score": 1, "author": "Forsvars", "subreddit": "Malware", "parent_id": 28628958914, "author_flair_css_class": null, "ups": 1, "id": "d5hlx71", "distinguished": null, "link_id": "t3_4tfrja", "retrieved_utc": 1471521464, "updated_utc": 1668785818, "body_sha1": "3fb3d56ddea3da9530ca40d46a6b45e75900bf5a", "utc_datetime_str": "2016-07-19 01:44:17"}, {"edited": false, "body": "&gt;logical groupings of functions\n\nHow do they determine how to separate different groups of functions, and how do they keep track of what represents each group?  For example, would they separate groups of functions based on what they do (i.e. this series of functions contacts a C&amp;C server, this series of functions are related to the placement of hooks), or is there some other metric?  And do they determine what value represents each group by hashing each group of functions, or is there some other method of identifying which group is which?\n\nMy understanding of how what you mentioned works is this (please correct me if I'm wrong):\n\n- determine control flow of program\n- separate program into segments that do particular things\n- find md5/sha/ssdeep hash of each group\n- if the program executes its functions in this order:\n      [first executed function] = [some ssdeep hash]\n      [second executed function] = [another ssdeep hash]\n      .............\n      [nth executed function] = [nth ssdeep hash]\n\nwhere each function in the list executed has an ssdeep hash similar to the hash of the function that executed in that order in a particular malware sample, then the executable being scanned is malicious.\n\nAm I understanding this correctly, or am I making some error?", "gilded": 0, "subreddit_id": "t5_2qrkp", "stickied": false, "controversiality": 0, "author_flair_text": null, "score": 1, "author": "exosphere6", "subreddit": "Malware", "created_utc": 1468892526, "ups": 1, "parent_id": 28629855779, "author_flair_css_class": null, "id": "d5hltyf", "distinguished": null, "link_id": "t3_4s9oxd", "retrieved_utc": 1471521421, "updated_utc": 1668785818, "body_sha1": "3bb75c6c6d3536d31ec404a79f4e9447d3639301", "utc_datetime_str": "2016-07-19 01:42:06"}, {"id": "d5hjju7", "distinguished": null, "link_id": "t3_4tfrja", "parent_id": null, "author_flair_css_class": null, "ups": 1, "created_utc": 1468889140, "controversiality": 0, "author_flair_text": null, "author": "crashish", "score": 1, "subreddit": "Malware", "subreddit_id": "t5_2qrkp", "stickied": false, "edited": false, "body": "Some nice analysis work here guys! This seems like an interesting case so I wanted to take a look at some of the indicators myself. I checked the data I have access to and found the same access pattern (my visibility is Cloudflare to this bad host... I'm not saying reddit has been distributing this the whole time) going back more than a month. VT seems to have great visibility for the domains being used here: https://www.virustotal.com/en/ip-address/104.243.35.138/information/", "gilded": 0, "retrieved_utc": 1471520347, "updated_utc": 1668785817, "body_sha1": "e6c49c7ba82ede03e2ee50874bed0d15d6b52f95", "nest_level": 1, "utc_datetime_str": "2016-07-19 00:45:40"}, {"stickied": false, "subreddit_id": "t5_2qrkp", "gilded": 0, "body": "[deleted]", "edited": true, "created_utc": 1468887283, "subreddit": "Malware", "author_flair_text": null, "score": 2, "author": "[deleted]", "controversiality": 0, "author_flair_css_class": null, "parent_id": 28629691036, "ups": 2, "link_id": "t3_4tfrja", "distinguished": null, "id": "d5hibby", "retrieved_utc": 1471519764, "updated_utc": 1668785816, "body_sha1": "228f7d207920fb84335fac5b2b06ed7b472ece9e", "edited_on": 1471355492, "utc_datetime_str": "2016-07-19 00:14:43"}, {"ups": 1, "author_flair_css_class": null, "parent_id": 28629708227, "link_id": "t3_4s9oxd", "distinguished": null, "id": "d5hh63n", "body": "Every engine is going to be rather different as they're all proprietary, and even then we have different ways to look at how code flows within a single engine. Sequence of APIs, logical groupings of functions, tokenisation of assembly code, decompile assembly into some sort of an IL representation, emulate code &amp; treat it like a scripted debugger almost etc.\n\nYou would probably be better looking at trigger-based detection than static detection these days tbh, as a starting point take a look at MS detours for using hooks to trigger your code. Understanding kernel memory structures can be very helpful as well such as leveraging NotifyRoutines, understanding object types &amp; how they can be set to run code as Open/Dump/Close/Parse/Delete[etc] procedures. Consider leveraging points that interest you to get the start of a behavioural system &amp; then as a very very simplistic start maybe just run Ssdeep over a code block that caused a trigger that you find interesting &amp; record the simple hashes that it produces. Later you can look at more interesting ways to evaluate the code that triggered the hook but start with something basic first to get a better understanding of how the OS works. Personally I think this would be more interesting &amp; more relevant to today's world than looking purely at static detection.", "gilded": 0, "edited": false, "stickied": false, "subreddit_id": "t5_2qrkp", "subreddit": "Malware", "author_flair_text": null, "score": 1, "author": "Fulrem", "controversiality": 0, "created_utc": 1468885524, "retrieved_utc": 1471519143, "updated_utc": 1668785815, "body_sha1": "45ddfc5d27b733f59ee0602ffc3a942dd54f2dc7", "utc_datetime_str": "2016-07-18 23:45:24"}, {"parent_id": 28629734443, "author_flair_css_class": null, "ups": 1, "distinguished": null, "id": "d5heq2p", "link_id": "t3_4tgqni", "subreddit_id": "t5_2qrkp", "stickied": false, "edited": false, "body": "Didn't know that sub was a thing. I'll delete this and check there. Thanks. ", "gilded": 0, "created_utc": 1468881765, "author_flair_text": null, "score": 1, "author": "ThisIsReLLiK", "controversiality": 0, "subreddit": "Malware", "retrieved_utc": 1471517991, "updated_utc": 1668785814, "body_sha1": "875a40b5fad8b2b8b33bca02a4efd8de726173ff", "utc_datetime_str": "2016-07-18 22:42:45"}], "error": null, "metadata": {"es": {"took": 62, "timed_out": false, "_shards": {"total": 824, "successful": 824, "skipped": 820, "failed": 0}, "hits": {"total": {"value": 45, "relation": "eq"}, "max_score": null}}, "es_query": {"size": 10, "query": {"bool": {"must": [{"bool": {"must": [{"range": {"created_utc": {"gte": 1468825260000}}}, {"range": {"created_utc": {"lt": 1468911660000}}}]}}, {"bool": {"should": [{"match": {"subreddit": "malware"}}], "minimum_should_match": 1}}]}}, "aggs": {}, "sort": {"created_utc": "desc"}}, "es_query2": "{\"size\":10,\"query\":{\"bool\":{\"must\":[{\"bool\":{\"must\":[{\"range\":{\"created_utc\":{\"gte\":1468825260000}}},{\"range\":{\"created_utc\":{\"lt\":1468911660000}}}]}},{\"bool\":{\"should\":[{\"match\":{\"subreddit\":\"malware\"}}],\"minimum_should_match\":1}}]}},\"aggs\":{},\"sort\":{\"created_utc\":\"desc\"}}", "api_launch_time": 1674057444.3751245, "api_request_start": 1674104816.2408416, "api_request_end": 1674104816.333853, "api_total_time": 0.09301137924194336}}