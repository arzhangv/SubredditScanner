{"data": [{"gilded": 0, "id": "cr29ycm", "author_flair_text": null, "edited": false, "downs": 0, "subreddit": "Malware", "archived": false, "score_hidden": false, "subreddit_id": "t5_2qrkp", "ups": 1, "link_id": "t3_356xkk", "body": "[deleted]", "score": 1, "author_flair_css_class": null, "parent_id": 27757468613, "created_utc": 1431063348, "removal_reason": null, "distinguished": null, "author": "[deleted]", "controversiality": 0, "retrieved_utc": 1432839162, "updated_utc": 1668794232, "body_sha1": "228f7d207920fb84335fac5b2b06ed7b472ece9e", "utc_datetime_str": "2015-05-08 05:35:48"}, {"id": "cr297r4", "gilded": 0, "edited": false, "author_flair_text": null, "downs": 0, "subreddit": "Malware", "score_hidden": false, "archived": false, "subreddit_id": "t5_2qrkp", "ups": 1, "body": "&gt;The function computes a 32-bit hash of a resource in memory, and compares it to the PE Compile Timestamp of the unpacked sample.\n\nYou need to change the timestamp once it is unpacked, but before this check. Your best bet is the timestamp. You can get the timestamp using nt_header-&gt;FileHeader.TimeDateStamp and modify the value before continuing execution. That way, regardless of the resource that it is hashing, the hash will not match.\n\nOr just patch the return value of the hashing function. Either way should work fine.\n\nAlso, if you have an unpacked sample, you can find the following string and this should take you to the routine that you are interested in:\n\n\u201cCarbon crack attempt, failed\u201d", "link_id": "t3_356xkk", "score": 1, "author_flair_css_class": null, "created_utc": 1431061344, "parent_id": null, "removal_reason": null, "distinguished": null, "author": "Nugsly", "controversiality": 0, "retrieved_utc": 1432838813, "updated_utc": 1668794232, "body_sha1": "a157f7833243634ff302fbd245066784cd1152b3", "nest_level": 1, "utc_datetime_str": "2015-05-08 05:02:24"}, {"id": "cr22vut", "author": "Onahail", "ups": 2, "gilded": 0, "author_flair_text": null, "parent_id": 27757400171, "created_utc": 1431048589, "edited": false, "body": "I'm not sure. The amount of garbage code it contains is insane, its so hard to pick out anything useful in that giant block of assembly...", "downs": 0, "subreddit": "Malware", "controversiality": 0, "distinguished": null, "score": 2, "archived": false, "subreddit_id": "t5_2qrkp", "removal_reason": null, "link_id": "t3_356xkk", "score_hidden": false, "author_flair_css_class": null, "retrieved_utc": 1432835759, "updated_utc": 1668794226, "body_sha1": "65b384a453d636ec136a5cb0e88cd540b71133de", "utc_datetime_str": "2015-05-08 01:29:49"}, {"ups": 1, "author": "Av3ragej0e", "id": "cr21gn0", "edited": false, "created_utc": 1431045964, "author_flair_text": null, "parent_id": null, "gilded": 0, "controversiality": 0, "subreddit": "Malware", "downs": 0, "body": "Just modify the PEB to get around the checks for processors. Initialize clipboard data to get around the second check.", "author_flair_css_class": null, "score_hidden": false, "link_id": "t3_34x6ux", "removal_reason": null, "subreddit_id": "t5_2qrkp", "archived": false, "score": 1, "distinguished": null, "retrieved_utc": 1432835089, "updated_utc": 1668794224, "body_sha1": "8653d232f639ea3840aa354044363e2d24e8b9aa", "nest_level": 1, "utc_datetime_str": "2015-05-08 00:46:04"}, {"archived": false, "score": 1, "distinguished": null, "author_flair_css_class": null, "score_hidden": false, "link_id": "t3_356xkk", "removal_reason": null, "subreddit_id": "t5_2qrkp", "body": "How does it do its hooking? I mean I know it uses CreateRemoteThread to inject itself following the WriteProcessMemory call in say....iexplore. I know it enables SPDY via the registry and gives itself SeDebugPrivilege, but what happens after that? How does it call home? \n\nAlso worth noting are hooks in CreateFileW(Firefox) and HttpSendRequestW(iexplore).", "controversiality": 0, "subreddit": "Malware", "downs": 0, "created_utc": 1431045881, "author_flair_text": null, "parent_id": null, "gilded": 0, "edited": false, "author": "Av3ragej0e", "id": "cr21f1n", "ups": 1, "retrieved_utc": 1432835068, "updated_utc": 1668794225, "body_sha1": "a130fe0af5483d321ec206718d912d719729ce91", "nest_level": 1, "utc_datetime_str": "2015-05-08 00:44:41"}, {"removal_reason": null, "author": "drkskppy", "distinguished": null, "score_hidden": false, "score": 6, "subreddit": "Malware", "controversiality": 0, "subreddit_id": "t5_2qrkp", "archived": false, "edited": false, "downs": 0, "id": "cr1wc39", "gilded": 0, "ups": 6, "author_flair_text": null, "author_flair_css_class": null, "parent_id": null, "created_utc": 1431036679, "body": "Are you looking at the packed or unpacked version?\nPacked: Put the executable in the folder it wants to be in. Start it in a debugger and set a breakpoint on ExitProcess. Execute til it breaks, then search memory for \"MZ\". That's a pretty common unpacking technique.\n\nUnpacked: 010editor has a couple of EXE templates that will show you where the compile time is in the PE header.", "link_id": "t3_356xkk", "retrieved_utc": 1432832603, "updated_utc": 1668794221, "body_sha1": "8424d0a9d1b1965dc767c026ff886d07ca6af3ac", "nest_level": 1, "utc_datetime_str": "2015-05-07 22:11:19"}, {"body": "[deleted]", "link_id": "t3_356xkk", "author_flair_css_class": null, "author_flair_text": null, "created_utc": 1431030535, "parent_id": null, "id": "cr1sfq4", "downs": 0, "gilded": 0, "ups": 3, "subreddit_id": "t5_2qrkp", "archived": false, "edited": false, "subreddit": "Malware", "controversiality": 0, "score_hidden": false, "score": 3, "distinguished": null, "removal_reason": null, "author": "[deleted]", "retrieved_utc": 1432830765, "updated_utc": 1668794219, "body_sha1": "228f7d207920fb84335fac5b2b06ed7b472ece9e", "nest_level": 1, "utc_datetime_str": "2015-05-07 20:28:55"}, {"body": "Craiwill, are you guys looking into Alpha Crypt. This is the new teslacrypt that uses EZZ extensions. ", "author_flair_css_class": null, "removal_reason": null, "archived": false, "author_flair_text": null, "ups": 1, "gilded": 0, "downs": 0, "created_utc": 1431022288, "distinguished": null, "link_id": "t3_341gmd", "subreddit": "Malware", "subreddit_id": "t5_2qrkp", "controversiality": 0, "edited": false, "parent_id": null, "score_hidden": false, "score": 1, "id": "cr1mxzi", "author": "lawrenceabrams", "retrieved_utc": 1432828106, "updated_utc": 1668794215, "body_sha1": "6835aa5fb52b8aec47b4b3aed73e3365782b114c", "nest_level": 1, "utc_datetime_str": "2015-05-07 18:11:28"}, {"downs": 0, "created_utc": 1431017434, "body": "You are correct, I'm sorry. I was testing the code on Windows when I posted on the blog, that's why I had to use the \"\\\\\" :) Thanks for pointing that out, it's fixed now.", "removal_reason": null, "archived": false, "author_flair_css_class": null, "author_flair_text": null, "ups": 2, "gilded": 0, "score_hidden": false, "score": 2, "id": "cr1jtgl", "author": "guitmz", "distinguished": null, "link_id": "t3_353s96", "subreddit": "Malware", "subreddit_id": "t5_2qrkp", "controversiality": 0, "edited": true, "parent_id": 27756536225, "retrieved_utc": 1432826633, "updated_utc": 1668794212, "body_sha1": "a0335f970cf7aa7fcbc85799b25cfe6310c8c903", "edited_on": 1431034791, "utc_datetime_str": "2015-05-07 16:50:34"}, {"ups": 2, "score_hidden": false, "controversiality": 0, "author": "jonatanhal", "author_flair_css_class": null, "edited": false, "created_utc": 1431016017, "body": "Not sure why you would use backslashes when targetting unix enviroments which don't use backslashes in paths. \n\nGetting a panic when running the code.\n`panic: open path/to/cwd\\test.go: no such file or directory`\n\non line 214, replace \"\\\\\\\" with \"/\" &amp; it will probably work better.\n", "author_flair_text": null, "subreddit": "Malware", "gilded": 0, "parent_id": null, "subreddit_id": "t5_2qrkp", "distinguished": null, "score": 2, "downs": 0, "id": "cr1iwf5", "removal_reason": null, "archived": false, "link_id": "t3_353s96", "retrieved_utc": 1432826131, "updated_utc": 1668794211, "body_sha1": "b9804e95cecc28b33d0d61ece7364086c6f45e14", "nest_level": 1, "utc_datetime_str": "2015-05-07 16:26:57"}], "error": null, "metadata": {"es": {"took": 63, "timed_out": false, "_shards": {"total": 824, "successful": 824, "skipped": 820, "failed": 0}, "hits": {"total": {"value": 16, "relation": "eq"}, "max_score": null}}, "es_query": {"size": 10, "query": {"bool": {"must": [{"bool": {"must": [{"range": {"created_utc": {"gte": 1430982060000}}}, {"range": {"created_utc": {"lt": 1431068460000}}}]}}, {"bool": {"should": [{"match": {"subreddit": "malware"}}], "minimum_should_match": 1}}]}}, "aggs": {}, "sort": {"created_utc": "desc"}}, "es_query2": "{\"size\":10,\"query\":{\"bool\":{\"must\":[{\"bool\":{\"must\":[{\"range\":{\"created_utc\":{\"gte\":1430982060000}}},{\"range\":{\"created_utc\":{\"lt\":1431068460000}}}]}},{\"bool\":{\"should\":[{\"match\":{\"subreddit\":\"malware\"}}],\"minimum_should_match\":1}}]}},\"aggs\":{},\"sort\":{\"created_utc\":\"desc\"}}", "api_launch_time": 1673017478.2273905, "api_request_start": 1674103659.1152272, "api_request_end": 1674103659.211139, "api_total_time": 0.09591174125671387}}