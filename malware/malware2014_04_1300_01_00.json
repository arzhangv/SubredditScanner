{"data": [{"author": "MalwareTech", "body": "You're probably right lol", "created_utc": 1397422445, "score": 2, "distinguished": null, "score_hidden": false, "edited": false, "subreddit": "Malware", "subreddit_id": "t5_2qrkp", "downs": 0, "author_flair_css_class": null, "removal_reason": null, "controversiality": 0, "gilded": 0, "parent_id": 27135084529, "id": "cgrj7xv", "link_id": "t3_22w5at", "author_flair_text": null, "ups": 2, "archived": true, "retrieved_utc": 1433339466, "updated_utc": 1668792904, "body_sha1": "9f8fbaf81d9e42b0e1759c49a5f5a9d9f3b9ceaf", "utc_datetime_str": "2014-04-13 20:54:05"}, {"ups": 2, "author_flair_text": null, "archived": true, "parent_id": 27135083369, "link_id": "t3_22w5at", "id": "cgrj181", "removal_reason": null, "gilded": 0, "controversiality": 0, "downs": 0, "author_flair_css_class": null, "edited": false, "score_hidden": false, "subreddit_id": "t5_2qrkp", "subreddit": "Malware", "score": 2, "created_utc": 1397421989, "distinguished": null, "body": "True, but I don't think this community would have a problem with that either. :)", "author": "therein", "retrieved_utc": 1433339379, "updated_utc": 1668792903, "body_sha1": "d34f346ab8ca3e66ca464a0eadb4cbf70322b270", "utc_datetime_str": "2014-04-13 20:46:29"}, {"author_flair_css_class": null, "downs": 0, "gilded": 0, "controversiality": 0, "removal_reason": null, "link_id": "t3_22w5at", "id": "cgrj0bt", "parent_id": null, "archived": true, "author_flair_text": null, "ups": 2, "body": "\"Education purposes\" is exactly what every blackhat asking for help says. ", "author": "MalwareTech", "distinguished": null, "score": 2, "created_utc": 1397421929, "subreddit_id": "t5_2qrkp", "subreddit": "Malware", "edited": false, "score_hidden": false, "retrieved_utc": 1433339368, "updated_utc": 1668792903, "body_sha1": "017cafe6d917c6aba69e05369225d3b3477d5ef4", "nest_level": 1, "utc_datetime_str": "2014-04-13 20:45:29"}, {"body": "[deleted]", "author": "[deleted]", "score": 3, "created_utc": 1397420678, "distinguished": null, "score_hidden": false, "edited": false, "subreddit_id": "t5_2qrkp", "subreddit": "Malware", "downs": 0, "author_flair_css_class": null, "removal_reason": null, "gilded": 0, "controversiality": 0, "parent_id": 27135056373, "link_id": "t3_22w5at", "id": "cgrihkg", "ups": 3, "author_flair_text": null, "archived": true, "retrieved_utc": 1433339122, "updated_utc": 1668792903, "body_sha1": "228f7d207920fb84335fac5b2b06ed7b472ece9e", "utc_datetime_str": "2014-04-13 20:24:38"}, {"subreddit": "Malware", "subreddit_id": "t5_2qrkp", "edited": false, "score_hidden": false, "body": "Cool guide, thanks!", "author": "CapnHooke", "distinguished": null, "score": 2, "created_utc": 1397420546, "id": "cgrifhx", "link_id": "t3_22w5at", "parent_id": 27135042707, "archived": true, "author_flair_text": null, "ups": 2, "author_flair_css_class": null, "downs": 0, "gilded": 0, "controversiality": 0, "removal_reason": null, "retrieved_utc": 1433339095, "updated_utc": 1668792903, "body_sha1": "247a1d2066977595aa92bbe50f718c4960420f23", "utc_datetime_str": "2014-04-13 20:22:26"}, {"body": "[deleted]", "author": "[deleted]", "score": 3, "created_utc": 1397419847, "distinguished": null, "edited": false, "score_hidden": false, "subreddit_id": "t5_2qrkp", "subreddit": "Malware", "downs": 0, "author_flair_css_class": null, "removal_reason": null, "gilded": 0, "controversiality": 0, "parent_id": 27134790064, "link_id": "t3_22w5at", "id": "cgri4yb", "ups": 3, "author_flair_text": null, "archived": true, "retrieved_utc": 1433338955, "updated_utc": 1668792903, "body_sha1": "228f7d207920fb84335fac5b2b06ed7b472ece9e", "utc_datetime_str": "2014-04-13 20:10:47"}, {"score_hidden": false, "edited": false, "subreddit_id": "t5_2qrkp", "subreddit": "Malware", "body": "http://cerbero-blog.com/?p=1311\nSummary: OS X uses an internal mechanism to load encrypted Apple executables. A \"PROTECTED\" flag in the Mach-O header indicates that a segment in the executable is encrypted. The encryption is pretty worthless since you can dump the executable from memory, but, if applied to a malware sample, static analysis suddenly fails to work, and it bypasses antivirus scanners. Technically not a \"packer\" because the decryption is done by the OS, not the malware itself. A smarter utility would easily decrypt it though, because the private key is the same and is shared across different versions of OS X. There is a kernel API to call, or you can use the reverse engineered version by Steve Nygard. Both are based on the OpenSSL implementation of Blowfish.\n\nhttp://reverse.put.as/Hitcon_2012_Presentation.pdf\nSummary: 1) Out: using Universal Access for keylogging. In: using logkext. 2) Out: code injection using Input Managers. In: DYLD_INSERT_LIBRARIES. New hotness: add a new library command into Mach-O header slack space: a LC_LOAD_DYLIB command. (Uh yea but that breaks code signing and app updates will require you to reinfect!) 3) Out: persistence via a Startup Item. In: using ~/.MacOSX/environment.plist. New hotness: infecting applications owned by the current user. 4) Privilege escalation: from a trusted process, display the authorization request to the user. Preferably during an app update operation.\n\nhttp://dl.packetstormsecurity.net/papers/worms/InqTanaThroughTheEyes.txt\nSummary: Malware techniques on OS X: method \"swizzling\" (a technique for Objective-C function hooking), Input Managers for code injection and persistence, Launchd for persistence (the LaunchAgents directory), global DYLD_INSERT_LIBRARIES environment variable abuse for persistence and code injection (~/.MacOSX/environment.plist), etc.\n\nhttp://www.f-secure.com/v-descs/trojan-downloader_osx_flashback_i.shtml\nSummary: It's about how many ways there are to get auto-loaded into the web browser on Mac OS X. Adding an DYLD_INSERT_LIBRARIES entry to /Applications/Safari.app/Contents/Info.plist or ~/.MacOSX/environment.plist are two ways.\n\nhttp://reverse.put.as/2013/11/23/breaking-os-x-signed-kernel-extensions-with-a-nop/\nSummary: Kextd is a standalone launchd daemon that handles requests from other user-mode processes to load kernel extensions (kexts). \"To launch the rootkit one just simply needs a binary that runtime patches kextd(task_for_pid, mach_vm_protect, mach_vm_write) and then loads the rootkit. Game over!\" This is possible because kextd (the kernel extension server) runs in user-mode. For the kernel to protect itself, the authentication of driver signatures should be done by the kernel itself.\n\nhttp://blog.trailofbits.com/2009/08/10/advanced-mac-os-x-rootkits/\nSummary: Code for several tools. The \"inject-bundle\" tool demonstrates the steps necessary to use injected memory and threads to load a Mach-O bundle into another task. A number of injectable bundles are included to demonstrate the API (test), capture an image using the iSight camera (iSight), log instant messages from within iChat (iChatSpy), and log SSL traffic sent through the Apple Secure Transport API (SSLSpy). Also included is a kernel rootkit detector. Note: the bundle injection technique can circumvent Little Sneak and the built-in Firewall.", "author": "Fristle", "score": 8, "created_utc": 1397415050, "distinguished": null, "parent_id": null, "link_id": "t3_22w5at", "id": "cgrg2ro", "author_flair_text": null, "ups": 8, "archived": true, "downs": 0, "author_flair_css_class": null, "removal_reason": null, "gilded": 0, "controversiality": 0, "retrieved_utc": 1433337985, "updated_utc": 1668792901, "body_sha1": "fd7ec4a4373c948126791e893bf48941d82a78c9", "nest_level": 1, "utc_datetime_str": "2014-04-13 18:50:50"}, {"score_hidden": false, "author_flair_css_class": null, "link_id": "t3_22w5at", "downs": 0, "distinguished": null, "id": "cgrcq0g", "edited": false, "parent_id": null, "ups": 2, "removal_reason": null, "score": 2, "created_utc": 1397406971, "body": "To extend this question, are there any guides like this for any platform? I have only seen the reverse engineering ones (which are more useful academically, but don't help much for proof of concept projects)", "subreddit": "Malware", "author_flair_text": null, "author": "CapnHooke", "gilded": 0, "subreddit_id": "t5_2qrkp", "controversiality": 0, "archived": true, "retrieved_utc": 1433336338, "updated_utc": 1668792898, "body_sha1": "251b46dce11a4909de4436d478ca88521d20a79e", "nest_level": 1, "utc_datetime_str": "2014-04-13 16:36:11"}, {"score_hidden": false, "link_id": "t3_22wsy2", "author_flair_css_class": null, "id": "cgrb6zi", "distinguished": null, "downs": 0, "removal_reason": null, "ups": 1, "parent_id": 27134546856, "edited": false, "score": 1, "created_utc": 1397402885, "subreddit": "Malware", "body": "Thanks.", "author": "learnmal", "author_flair_text": null, "subreddit_id": "t5_2qrkp", "gilded": 0, "archived": true, "controversiality": 0, "retrieved_utc": 1433335619, "updated_utc": 1668792895, "body_sha1": "6099fe716243d239f9d6081bf25d806adf5a41ab", "utc_datetime_str": "2014-04-13 15:28:05"}, {"created_utc": 1397392330, "subreddit": "Malware", "body": "http://cybercrime-tracker.net/ made by Xylit0l who is an active member of kernelmode ", "author": "n0ko", "author_flair_text": null, "subreddit_id": "t5_2qrkp", "gilded": 0, "archived": true, "controversiality": 0, "score_hidden": false, "author_flair_css_class": null, "link_id": "t3_22wsy2", "downs": 0, "id": "cgr8bf5", "distinguished": null, "ups": 2, "parent_id": null, "edited": false, "removal_reason": null, "score": 2, "retrieved_utc": 1433334262, "updated_utc": 1668792891, "body_sha1": "6dafd15674399e65c80467d8fa09082c925b28e9", "nest_level": 1, "utc_datetime_str": "2014-04-13 12:32:10"}], "error": null, "metadata": {"es": {"took": 63, "timed_out": false, "_shards": {"total": 824, "successful": 824, "skipped": 820, "failed": 0}, "hits": {"total": {"value": 11, "relation": "eq"}, "max_score": null}}, "es_query": {"size": 10, "query": {"bool": {"must": [{"bool": {"must": [{"range": {"created_utc": {"gte": 1397372460000}}}, {"range": {"created_utc": {"lt": 1397458860000}}}]}}, {"bool": {"should": [{"match": {"subreddit": "malware"}}], "minimum_should_match": 1}}]}}, "aggs": {}, "sort": {"created_utc": "desc"}}, "es_query2": "{\"size\":10,\"query\":{\"bool\":{\"must\":[{\"bool\":{\"must\":[{\"range\":{\"created_utc\":{\"gte\":1397372460000}}},{\"range\":{\"created_utc\":{\"lt\":1397458860000}}}]}},{\"bool\":{\"should\":[{\"match\":{\"subreddit\":\"malware\"}}],\"minimum_should_match\":1}}]}},\"aggs\":{},\"sort\":{\"created_utc\":\"desc\"}}", "api_launch_time": 1673017478.254743, "api_request_start": 1674102618.8346236, "api_request_end": 1674102618.936127, "api_total_time": 0.10150337219238281}}