{"data": [{"id": "d5geo14", "distinguished": null, "link_id": "t3_4t9lkh", "parent_id": null, "author_flair_css_class": null, "ups": 3, "created_utc": 1468813215, "controversiality": 0, "author_flair_text": null, "score": 3, "author": "djstrb", "subreddit": "Malware", "subreddit_id": "t5_2qrkp", "stickied": false, "edited": false, "gilded": 0, "body": "Where do I even start....\n\nProbably not by asking open ended questions and questions without any context in the future...", "retrieved_utc": 1471500658, "updated_utc": 1668785788, "body_sha1": "69f83286b8e2680165a5acaca100b2ae69875936", "nest_level": 1, "utc_datetime_str": "2016-07-18 03:40:15"}, {"subreddit_id": "t5_2qrkp", "stickied": false, "edited": false, "body": "&gt;  crypter signature \n\nWe do, but those have a limited lifespan &amp; most generic static detection work like that is seen as cat 'n' mouse tactics. Obviously custom packers you commonly see on hackforums for items like RATs as the example you gave are only designed to obfuscate against static detection. When the item runs it needs to unpack itself into memory &amp; will stand out like at sore thumb at that point, it also needs to connect out which fires alarms especially if we already have the remote address flags as dodgy, with your specific example of DarkComet it [originally] would generate a folder $AppData\\dclogs\\, create a registry key HKCU\\SOFTWARE\\DC3_FEXEC etc. There can be many types of markers for malware families, some obvious, some not so.\n\nThere are a lot of ways to defeat custom packers quite easily as well, for example most of them will use suspect injection techniques so if you can find a good starting-point/point-of-interest you can emulate part of the initial packing layer &amp; look at what is generated. There will normally be a couple of layers but you can see enough dodgy techniques between the outer layer &amp; the next inner layer to safely block as an \"injector\". But if you're only thinking about automation of processing the samples for grouping then running through a sandbox &amp; having your own rule set as triggers does the work. AV is all about layered protections these days, static detection is merely one aspect. Don't forget that even if someone claims a packer is \"fud\" the likely hood of the malware being able to run without being detected on a protected system is extremely slim. I'm not saying people can't get around AV, but to do so is typically a far more targeted attack than the skiddy shit you see on hack forums.", "gilded": 0, "created_utc": 1468801590, "author_flair_text": null, "score": 1, "author": "Fulrem", "controversiality": 0, "subreddit": "Malware", "parent_id": 28613963055, "author_flair_css_class": null, "ups": 1, "distinguished": null, "id": "d5g87lv", "link_id": "t3_4s9oxd", "retrieved_utc": 1471497535, "updated_utc": 1668785784, "body_sha1": "b1480a7dbc4089111af91732d1182e9c7000c3cc", "utc_datetime_str": "2016-07-18 00:26:30"}, {"author_flair_text": null, "score": 1, "author": "mooger3", "controversiality": 0, "subreddit": "Malware", "created_utc": 1468789690, "edited": false, "body": "Apply for junior positions probably. ESET had a contest awhile back on reverse engineering if I recall correctly, that would look well. An active github could look nice too.", "gilded": 0, "subreddit_id": "t5_2qrkp", "stickied": false, "distinguished": null, "id": "d5g1a2f", "link_id": "t3_4t9bkr", "ups": 1, "parent_id": 28627294521, "author_flair_css_class": null, "retrieved_utc": 1471494241, "updated_utc": 1668785776, "body_sha1": "e867753e37d028459a6576eda2de694de668a10a", "utc_datetime_str": "2016-07-17 21:08:10"}, {"stickied": false, "subreddit_id": "t5_2qrkp", "gilded": 0, "body": "Suppose one can write malware. Has no education nor certifications etc. Like how to land to honest job matching one's skill set? Seems not that likely.", "edited": false, "created_utc": 1468785069, "subreddit": "Malware", "author_flair_text": null, "score": 2, "author": "qx7xbku", "controversiality": 0, "author_flair_css_class": null, "parent_id": 28626615786, "ups": 2, "link_id": "t3_4t9bkr", "distinguished": null, "id": "d5fy9tl", "retrieved_utc": 1471492743, "updated_utc": 1668785773, "body_sha1": "c49b57bfc13ee2f1bd1dc881361810511755dd41", "utc_datetime_str": "2016-07-17 19:51:09"}, {"distinguished": null, "id": "d5fxu4b", "link_id": "t3_4t8r0d", "parent_id": 28627176694, "author_flair_css_class": null, "ups": 6, "created_utc": 1468784372, "score": 6, "author_flair_text": null, "author": "Sol_Sanctum", "controversiality": 0, "subreddit": "Malware", "subreddit_id": "t5_2qrkp", "stickied": false, "edited": false, "gilded": 0, "body": "I was disappointed as well. :/", "retrieved_utc": 1471492538, "updated_utc": 1668785772, "body_sha1": "c21133f877ce2e576cfac358d71cbd5715a06ff7", "utc_datetime_str": "2016-07-17 19:39:32"}, {"body": "Title is totally inaccurate. It said nothing about reverse-engineering malware at all. All it described was networking setup of VMs malware is reverse-engineered in, not an actual process of malware rce..", "gilded": 0, "edited": false, "stickied": false, "subreddit_id": "t5_2qrkp", "subreddit": "Malware", "author_flair_text": null, "author": "qx7xbku", "score": 13, "controversiality": 0, "created_utc": 1468781015, "ups": 13, "author_flair_css_class": null, "parent_id": null, "link_id": "t3_4t8r0d", "distinguished": null, "id": "d5fvqwm", "retrieved_utc": 1471491553, "updated_utc": 1668785769, "body_sha1": "6e039bbcaaf679c840991d7d18c6d5955825763d", "nest_level": 1, "utc_datetime_str": "2016-07-17 18:43:35"}, {"stickied": false, "subreddit_id": "t5_2qrkp", "body": "https://www.malwaretech.com/2015/08/creating-ultimate-tor-virtual-network.html", "gilded": 0, "edited": false, "created_utc": 1468762958, "subreddit": "Malware", "controversiality": 0, "author_flair_text": null, "author": "tetyys", "score": 5, "author_flair_css_class": null, "parent_id": null, "ups": 5, "link_id": "t3_4t8r0d", "id": "d5fllrc", "distinguished": null, "retrieved_utc": 1471486706, "updated_utc": 1668785761, "body_sha1": "83ab6dd18d186a767a55b9df6a955852a3800be8", "nest_level": 1, "utc_datetime_str": "2016-07-17 13:42:38"}, {"stickied": false, "subreddit_id": "t5_2qrkp", "body": "First off, I'm pretty sure the person told you to learn Assembly and RE techniques to reverse engineer the windows API so you do not use it, not so you can learn how to use it.\n\nSecond, There's an easy way for you to \"bypass antivirus\"  where anything you write won't be detected. And even more, you will still be able to use the windows API so that you don't have to get your hands dirty with any of that assembly code nonsense. \n\nHeres what you have to do:\n\n&gt;Not  write malicious code.\n\nThird, If it was easy to defeat antivirus, like copy &amp; pasting a block of code, to bypass antivirus. Then there wouldn't be any Anti-Virus companies in business. If you ever want to defeat anti-virus you will need to learn a lot more than just assembly and RE techniques. \n\nI suggest aiming a little lower and learn to program in general - Which your post leads me to believe you cannot currently do. Here is a roadmap of steps to get started:\n\n1. Learn an interpreted language (like Python)\n2. Write a somewhat complicated program in that language that people in a community will use. (Good communities for this are places like console homebrew. Such as the 3DS homebrew scene which is very active, easy to get into, and a lot of quality of life tools just don't exist yet!)\n3. Post it on Github and get feedback from your users, build and maintain this application\n\n4. Learn basic C/C++ Programming\n5. Write a _different_ complicated program in that language that people in a community will use. (Good communities for this are places like console homebrew. Such as the 3DS homebrew scene which is very active, easy to get into, and a lot of quality of life tools just don't exist yet!) \n6. At this point in order to make the application run on any OS, you will have been exposed to some of the OS' APIs  and understand its basic functionality, giving you a good grasp on how OS' APIs work and how to utilize them.\n7. Post it on Github and get feedback from your users, build and maintain this application.\n\n8. Through maintaining these programs you will re-write the code multiple times over, refactoring and reimplementing functions in better ways and you will get a pretty good understanding of how to make a decent application. This will also expose you to debugging techniques, reverse engineering, and the windows API.\n\n\n3 Years later, you will be ready to write your first piece of malware. However you will also realize that you are more mature and that you don't want to write malware anymore. However, you probably do want an answer that question you asked on reddit one Sunday morning while you browsed something and thought \"if bad guys can do it is must be easy for me to!\"\n\nWell, The first step to defeating anti-virus is to stop using any external code which means you can no longer use WINAPI. However, you will still need to interact with other processes which run on windows and use the Windows API.\n\n\"How do i do that?\" I hear your 3-year older self asking. Well, you need to write your own implementation of the windows API. One that allows you to interact with the OS and other processes, but will also not follow those \"pesky rules\" that windows has like registering the injected code module so that the program knows its there.\n\nSince WINAPI's purpose was to abstract away the need to even know that theres a level of core programming under the windows operating system, by cleanly handling all those low level data structures and assembly code dirty work for you. You will need to learn assembly, then write all that assembly code yourself. You will also need to make sure that is plays nicely with everything that Windows is doing otherwise it'll crash.\n\nDon't worry though! Since you can do inline assembly code with all modern C/C++ compilers, its technically still C/C++ programming so your statement \"I want to write malware in C++\" will still be true. \n\nIn summation, Here's another roadmap since thats probably all you are going to read: \n\n1. Learn what the Windows API does\n2. Reverse engineer how it does it\n3. Reimplement it in Assembly\n\nI think it goes without saying that this answers the question: \"Is there another way to know about windows API?\" But in case you are still unsure, the answer is a resounding **No**.\n\nLet's say you manage to do all of that. Unfortunately you had to learn Assembly, reverse engineering, and the Windows API. Does that mean you bypassed Antivirus?\n\n**Nope.**\n\nI can hear you asking \"Why not SippieCup? I am not using any external libraries or the windows API. That means I am now invisible to the operating system and other processes. Nothing should be able to see me!\"\n\nWell.. It turns out that anti-virus programs already do all of that, and even more, to find the malware which also does not follow the rules. So how do you truly defeat Anti-Virus? I have no idea. and if I did know a way to do it - I sure as hell am not going to just post it on reddit so that AV venders see how and fix it.\n\n\n\n\n\n\n", "gilded": 0, "edited": true, "created_utc": 1468762060, "subreddit": "Malware", "author_flair_text": null, "author": "SippieCup", "score": 7, "controversiality": 0, "author_flair_css_class": null, "parent_id": null, "ups": 7, "link_id": "t3_4t9bkr", "distinguished": null, "id": "d5fl978", "retrieved_utc": 1471486449, "updated_utc": 1668785761, "body_sha1": "05eac0f89f8565ed4a3b25eb7039e80d07e9e313", "edited_on": 1468762542, "nest_level": 1, "utc_datetime_str": "2016-07-17 13:27:40"}, {"gilded": 0, "body": "I write it for myself and only use on my computer.I write malware as challenge for myself when i am boring...all summer", "edited": false, "stickied": false, "subreddit_id": "t5_2qrkp", "subreddit": "Malware", "author_flair_text": null, "score": -3, "author": "kuqadk3", "controversiality": 1, "created_utc": 1468761236, "ups": -3, "author_flair_css_class": null, "parent_id": 28626615786, "link_id": "t3_4t9bkr", "distinguished": null, "id": "d5fkyc4", "retrieved_utc": 1471486306, "updated_utc": 1668785760, "body_sha1": "3a9fc4c6ec1a7a8f29198ce220ec12df5aeb8119", "utc_datetime_str": "2016-07-17 13:13:56"}, {"created_utc": 1468757874, "subreddit": "Malware", "controversiality": 0, "author_flair_text": null, "score": 2, "author": "Packiesla", "stickied": false, "subreddit_id": "t5_2qrkp", "gilded": 0, "body": "It doesn't look that sophisticated. ", "edited": false, "link_id": "t3_4syzsc", "id": "d5fju7g", "distinguished": null, "author_flair_css_class": null, "parent_id": null, "ups": 2, "retrieved_utc": 1471485781, "updated_utc": 1668785760, "body_sha1": "82a753bb1dd2e8ace6192401ae23bfc2d336b9e6", "nest_level": 1, "utc_datetime_str": "2016-07-17 12:17:54"}], "error": null, "metadata": {"es": {"took": 69, "timed_out": false, "_shards": {"total": 824, "successful": 824, "skipped": 820, "failed": 0}, "hits": {"total": {"value": 11, "relation": "eq"}, "max_score": null}}, "es_query": {"size": 10, "query": {"bool": {"must": [{"bool": {"must": [{"range": {"created_utc": {"gte": 1468738860000}}}, {"range": {"created_utc": {"lt": 1468825260000}}}]}}, {"bool": {"should": [{"match": {"subreddit": "malware"}}], "minimum_should_match": 1}}]}}, "aggs": {}, "sort": {"created_utc": "desc"}}, "es_query2": "{\"size\":10,\"query\":{\"bool\":{\"must\":[{\"bool\":{\"must\":[{\"range\":{\"created_utc\":{\"gte\":1468738860000}}},{\"range\":{\"created_utc\":{\"lt\":1468825260000}}}]}},{\"bool\":{\"should\":[{\"match\":{\"subreddit\":\"malware\"}}],\"minimum_should_match\":1}}]}},\"aggs\":{},\"sort\":{\"created_utc\":\"desc\"}}", "api_launch_time": 1673017478.254743, "api_request_start": 1674104813.5262961, "api_request_end": 1674104813.638503, "api_total_time": 0.11220693588256836}}