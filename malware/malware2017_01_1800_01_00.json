{"data": [{"id": "dcm04gb", "edited": false, "parent_id": null, "distinguished": null, "created_utc": 1484791035, "subreddit_id": "t5_2qrkp", "author_flair_css_class": null, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5otdjy", "score": 6, "author": "intellos", "subreddit": "Malware", "gilded": 0, "stickied": false, "body": "Nah, I figured Malware creators were just going to take a year off, maybe go on vacation with all those Ransomware dollars.", "retrieved_utc": 1486167697, "updated_utc": 1668776932, "body_sha1": "8ebb7cdc317400619c90ce06ccf254b824819eb6", "nest_level": 1, "utc_datetime_str": "2017-01-19 01:57:15"}, {"created_utc": 1484789647, "distinguished": null, "parent_id": null, "edited": false, "id": "dclz32p", "subreddit": "Malware", "gilded": 0, "stickied": false, "body": "Site doesn't load content for me, just header and then PR shit below.", "score": 5, "author": "netshrek", "link_id": "t3_5otdjy", "subreddit_id": "t5_2qrkp", "author_flair_text": null, "author_flair_css_class": null, "controversiality": 0, "retrieved_utc": 1486167156, "updated_utc": 1668776931, "body_sha1": "6ef949bcb9a0ebed853a48ef1c4f3f6bc3c07ef8", "nest_level": 1, "utc_datetime_str": "2017-01-19 01:34:07"}, {"parent_id": null, "id": "dclxhak", "edited": false, "created_utc": 1484787500, "distinguished": null, "author_flair_text": null, "author_flair_css_class": null, "controversiality": 0, "subreddit_id": "t5_2qrkp", "link_id": "t3_5otcct", "author": "authynym", "score": 3, "gilded": 0, "stickied": false, "body": "ALL CAPS CLICK-BAITY TITLE LINKING TO NEWS AGGREGATOR SITE INSTEAD OF THE ACTUAL ARTICLE LEADS TO BOOM IN DOWNVOTES\n\n\n\nActual article: http://searchsecurity.techtarget.com/news/450410798/Insecure-MongoDB-configuration-leads-to-boom-in-ransom-attacks\n\nTl;dr: don't stand up services without some consideration for security, and ffs don't do it on public interfaces without a really good reason.", "subreddit": "Malware", "retrieved_utc": 1486166341, "updated_utc": 1668776929, "body_sha1": "304314799bebd1d2110907c182ec1ba260e5089e", "nest_level": 1, "utc_datetime_str": "2017-01-19 00:58:20"}, {"created_utc": 1484740876, "distinguished": null, "parent_id": null, "id": "dckww36", "edited": false, "body": "Have you looked at Metasploit? They have built-in exploits you can examine. Be prepared for the fact that known working DEP and ASLR bypasses are already patched in the most current OS versions. If you need to do a demo or experiment, you will likely need to move back to a older patch level. ", "stickied": false, "gilded": 0, "subreddit": "Malware", "author": "xylogx", "score": 1, "link_id": "t3_5okz2c", "author_flair_text": null, "author_flair_css_class": null, "controversiality": 0, "subreddit_id": "t5_2qrkp", "retrieved_utc": 1486148025, "updated_utc": 1668776885, "body_sha1": "03d10704e3318e1714baf5d32548a6a57cc39460", "nest_level": 1, "utc_datetime_str": "2017-01-18 12:01:16"}, {"created_utc": 1484739234, "distinguished": null, "parent_id": 29057547965, "id": "dckwbkj", "edited": false, "stickied": false, "body": "Their EC2 backups got encrypted as well due to poor network segmentation.  Also, they did not have cyber insurance. ", "gilded": 0, "subreddit": "Malware", "author": "addyftw1", "score": 1, "link_id": "t3_5oeuc1", "author_flair_text": null, "author_flair_css_class": null, "controversiality": 0, "subreddit_id": "t5_2qrkp", "retrieved_utc": 1486147738, "updated_utc": 1668776884, "body_sha1": "6dd0dbc27997905f46cb98a15d116da82a1a6f18", "utc_datetime_str": "2017-01-18 11:33:54"}, {"created_utc": 1484738335, "distinguished": null, "parent_id": 29058650240, "edited": false, "id": "dckw0ue", "subreddit": "Malware", "body": "I know some kids tried this for a capstone project (final uni subject). Except they just looked up std C libraries. Not sure if via symbol table or signatures.\n\nOP might be better looking up bypassing DEP.\n\nhttps://scholar.google.com.au/scholar?hl=en&amp;q=bypass+DEP&amp;btnG=&amp;as_sdt=1%2C5&amp;as_sdtp=\n\nhttps://scholar.google.com.au/scholar?q=ROP+gadget&amp;btnG=&amp;hl=en&amp;as_sdt=0%2C5", "stickied": false, "gilded": 0, "score": 1, "author": "TailSpinBowler", "link_id": "t3_5okz2c", "subreddit_id": "t5_2qrkp", "author_flair_css_class": null, "author_flair_text": null, "controversiality": 0, "retrieved_utc": 1486147592, "updated_utc": 1668776884, "body_sha1": "474810172c45e7ac34c386937ea9e25c73c26031", "utc_datetime_str": "2017-01-18 11:18:55"}, {"score": 2, "author": "d4rch0n", "subreddit": "Malware", "gilded": 0, "stickied": false, "body": "That's some great stuff to learn, but you might be taking a much harder path than you need to. It might make your life easier to pick something that already has exploit code written for it. Exploit development is a huge undertaking and it'd be a little extreme for him to want you to learn ROP and double-free and actually implement an exploit from scratch... Maybe that's what he's asking for, but it sounds like it might not be. If you're just supposed to survey some exploitation tools and defensive tools, all you might need to do is just briefly survey metasploit and an exploit module or two, and maybe an IDS like suricata or snort that can detect that activity. If he's just asking you to survey exploitation of an existing vulnerability and detection tools, just metasploit + snort or suricata might be plenty.\n\nAnother thing is you might not want to focus on detecting a specific exploit. Some vulnerabilities might be exploited in a way that's not very obvious to an IDS at all. Is he looking for detection based on analyzing program memory? That's not too practical. You'd generally want to use some common IDS. Also, another way to approach it might be to detect the typical payload that gets executed because basing your detection on a specific memory corruption vulnerability is pretty impractical. Might be the sort of research he wants to look into, but don't think this is something you'd see in sec ops really. There might be something fancy like that but I don't know. Detecting exploitation by scanning a process in memory continuously is incredibly impractical, watching network traffic isn't. More likely something like tripwire watches for changes to the system after the fact, or network traffic is dropped before the fact.\n\nWith metasploit, you can write generic exploits that take an arbitrary payload. The exploit specifies where to drop the payload, and then you pick any payload with metasploit. A very common payload is meterpreter, and detecting that would be very interesting. [You might see an example of that here](https://blog.didierstevens.com/2015/05/11/detecting-network-traffic-from-metasploits-meterpreter-reverse-http-module/). If you can detect meterpreter being executed from any arbitrary vulnerability, it might be a lot more usable. That would detect a live targeted attack and is arguably much more applicable to the real world. \n\nYou might also look at [shellshock](https://blog.cloudflare.com/inside-shellshock/) for a super easy example of an incredibly popular vulnerability that would be incredibly easy to detect. If the user agent in a HTTP request starts with \"() { :; }; \" someone is trying to launch it. This might not be very interesting to publish, but it's stupid easy to execute and detect in practice and as simple as it is, it was a huge deal when it came out. Big name vulnerability and people will know of it. It doesn't even exploit memory corruption or anything, just a very serious logic bug.\n\nIt's possible this guy wants you to actually demo exploit development from the ground up, but I'd make sure of that before jumping into exploit development. That scales your work way up.", "subreddit_id": "t5_2qrkp", "author_flair_css_class": null, "controversiality": 0, "author_flair_text": null, "link_id": "t3_5okz2c", "distinguished": null, "created_utc": 1484729518, "edited": true, "id": "dcktab4", "parent_id": 29058531148, "retrieved_utc": 1486146204, "updated_utc": 1668776881, "body_sha1": "2a6eab073e5de77f51b41afe75edac1c0c592e5e", "edited_on": 1484729923, "utc_datetime_str": "2017-01-18 08:51:58"}], "error": null, "metadata": {"es": {"took": 94, "timed_out": false, "_shards": {"total": 824, "successful": 824, "skipped": 820, "failed": 0}, "hits": {"total": {"value": 7, "relation": "eq"}, "max_score": null}}, "es_query": {"size": 10, "query": {"bool": {"must": [{"bool": {"must": [{"range": {"created_utc": {"gte": 1484726460000}}}, {"range": {"created_utc": {"lt": 1484812860000}}}]}}, {"bool": {"should": [{"match": {"subreddit": "malware"}}], "minimum_should_match": 1}}]}}, "aggs": {}, "sort": {"created_utc": "desc"}}, "es_query2": "{\"size\":10,\"query\":{\"bool\":{\"must\":[{\"bool\":{\"must\":[{\"range\":{\"created_utc\":{\"gte\":1484726460000}}},{\"range\":{\"created_utc\":{\"lt\":1484812860000}}}]}},{\"bool\":{\"should\":[{\"match\":{\"subreddit\":\"malware\"}}],\"minimum_should_match\":1}}]}},\"aggs\":{},\"sort\":{\"created_utc\":\"desc\"}}", "api_launch_time": 1673945683.810305, "api_request_start": 1674105301.5326974, "api_request_end": 1674105301.675942, "api_total_time": 0.14324450492858887}}